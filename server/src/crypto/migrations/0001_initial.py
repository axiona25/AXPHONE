# Generated by Django 5.2.4 on 2025-09-13 18:14

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_name', models.CharField(max_length=100)),
                ('device_type', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('web', 'Web'), ('desktop', 'Desktop')], max_length=20)),
                ('fcm_token', models.CharField(blank=True, max_length=255, null=True)),
                ('apns_token', models.CharField(blank=True, max_length=255, null=True)),
                ('device_fingerprint', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_rooted', models.BooleanField(default=False)),
                ('is_jailbroken', models.BooleanField(default=False)),
                ('is_compromised', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IdentityKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_key', models.BinaryField()),
                ('private_key_encrypted', models.BinaryField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='identity_key', to='crypto.device')),
            ],
        ),
        migrations.CreateModel(
            name='KeyRotationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rotation_type', models.CharField(choices=[('identity', 'Identity Key'), ('signed_prekey', 'Signed PreKey'), ('one_time_prekey', 'One-Time PreKey'), ('session', 'Session Key')], max_length=20)),
                ('old_key_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('new_key_hash', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_rotations', to='crypto.device')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('file', 'File'), ('call', 'Call')], max_length=20)),
                ('encrypted_content_hash', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='crypto.device')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='crypto.device')),
            ],
        ),
        migrations.CreateModel(
            name='OneTimePreKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_id', models.PositiveIntegerField()),
                ('public_key', models.BinaryField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='one_time_prekeys', to='crypto.device')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_data_encrypted', models.BinaryField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('device_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_as_a', to='crypto.device')),
                ('device_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_as_b', to='crypto.device')),
            ],
        ),
        migrations.CreateModel(
            name='SignedPreKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_id', models.PositiveIntegerField()),
                ('public_key', models.BinaryField()),
                ('signature', models.BinaryField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signed_prekeys', to='crypto.device')),
            ],
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['user', 'is_active'], name='crypto_devi_user_id_1575f9_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['device_fingerprint'], name='crypto_devi_device__f4a20a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='device',
            unique_together={('user', 'device_fingerprint')},
        ),
        migrations.AddIndex(
            model_name='identitykey',
            index=models.Index(fields=['device'], name='crypto_iden_device__f7d828_idx'),
        ),
        migrations.AddIndex(
            model_name='keyrotationlog',
            index=models.Index(fields=['device', 'rotation_type'], name='crypto_keyr_device__d696b0_idx'),
        ),
        migrations.AddIndex(
            model_name='keyrotationlog',
            index=models.Index(fields=['created_at'], name='crypto_keyr_created_8ac57b_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', 'recipient'], name='crypto_mess_sender__c9d97c_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['created_at'], name='crypto_mess_created_1cf770_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['delivered_at'], name='crypto_mess_deliver_1bf9ca_idx'),
        ),
        migrations.AddIndex(
            model_name='onetimeprekey',
            index=models.Index(fields=['device', 'key_id'], name='crypto_onet_device__7ffae8_idx'),
        ),
        migrations.AddIndex(
            model_name='onetimeprekey',
            index=models.Index(fields=['used_at'], name='crypto_onet_used_at_fcbd68_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='onetimeprekey',
            unique_together={('device', 'key_id')},
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['device_a', 'device_b'], name='crypto_sess_device__900b8c_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['last_message_at'], name='crypto_sess_last_me_5fae89_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='session',
            unique_together={('device_a', 'device_b')},
        ),
        migrations.AddIndex(
            model_name='signedprekey',
            index=models.Index(fields=['device', 'key_id'], name='crypto_sign_device__45315c_idx'),
        ),
        migrations.AddIndex(
            model_name='signedprekey',
            index=models.Index(fields=['expires_at'], name='crypto_sign_expires_dac7c9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='signedprekey',
            unique_together={('device', 'key_id')},
        ),
    ]
