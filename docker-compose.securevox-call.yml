version: '3.8'

services:
  # Backend Django esistente
  securevox-backend:
    build: 
      context: ./server
      dockerfile: Dockerfile.production
    container_name: securevox-backend
    ports:
      - "8001:8001"
    environment:
      - DEBUG=False
      - DATABASE_URL=sqlite:///app/securevox.db
      - SECRET_KEY=your-secret-key-here
    volumes:
      - ./server/securevox.db:/app/securevox.db
      - ./server/media:/app/media
    networks:
      - securevox-network
    restart: unless-stopped

  # Nuovo SecureVOX Call Server
  securevox-call:
    build: 
      context: ./call-server
      dockerfile: Dockerfile
    container_name: securevox-call-server
    ports:
      - "8002:8002"
    environment:
      - NODE_ENV=production
      - SECUREVOX_CALL_PORT=8002
      - DJANGO_BACKEND_URL=http://securevox-backend:8001
      - SECUREVOX_CALL_JWT_SECRET=your-call-jwt-secret-here
    depends_on:
      - securevox-backend
    networks:
      - securevox-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # TURN Server per NAT traversal (opzionale ma raccomandato)
  coturn:
    image: coturn/coturn:latest
    container_name: securevox-turn-server
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "49152-65535:49152-65535/udp"
    environment:
      - TURN_USERNAME=securevox
      - TURN_PASSWORD=securevox-turn-2024
    command: >
      turnserver
      --listening-port=3478
      --realm=securevox.local
      --user=securevox:securevox-turn-2024
      --lt-cred-mech
      --fingerprint
      --no-multicast-peers
      --no-cli
      --no-tlsv1
      --no-tlsv1_1
      --verbose
    networks:
      - securevox-network
    restart: unless-stopped

  # Nginx reverse proxy (opzionale)
  nginx:
    image: nginx:alpine
    container_name: securevox-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - securevox-backend
      - securevox-call
    networks:
      - securevox-network
    restart: unless-stopped

networks:
  securevox-network:
    driver: bridge
    name: securevox-network

volumes:
  securevox-data:
    driver: local
