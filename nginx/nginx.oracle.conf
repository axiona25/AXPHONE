# Nginx Configuration for SecureVox on Oracle Cloud
# Ottimizzato per 50 utenti simultanei

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Ottimizzazioni per Oracle Cloud Free Tier
worker_rlimit_nofile 2048;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log format ottimizzato
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time ut=$upstream_response_time';

    access_log /var/log/nginx/access.log main;

    # Performance ottimizzazioni
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting per proteggere da abusi
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=register:10m rate=2r/m;

    # Upstream per Django backend
    upstream django_backend {
        server django-backend:8000;
        keepalive 32;
    }

    # Upstream per Call Server
    upstream call_server {
        server call-server:3001;
        keepalive 16;
    }

    # Upstream per Janus WebRTC
    upstream janus_http {
        server janus:8088;
    }

    upstream janus_websocket {
        server janus:8188;
    }

    # Server principale
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Redirect HTTP to HTTPS in production
        # return 301 https://$server_name$request_uri;

        # Static files
        location /static/ {
            alias /var/www/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
            
            # Compressione per file statici
            location ~* \.(css|js)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Media files
        location /media/ {
            alias /var/www/media/;
            expires 7d;
            add_header Cache-Control "public";
            
            # Limite dimensione per upload
            client_max_body_size 10M;
        }

        # API endpoints con rate limiting
        location /api/auth/login/ {
            limit_req zone=login burst=3 nodelay;
            proxy_pass http://django_backend;
            include /etc/nginx/proxy_params;
        }

        location /api/auth/register/ {
            limit_req zone=register burst=2 nodelay;
            proxy_pass http://django_backend;
            include /etc/nginx/proxy_params;
        }

        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://django_backend;
            include /etc/nginx/proxy_params;
        }

        # Admin panel
        location /admin/ {
            # Solo per admin, rate limit pi√π stringente
            limit_req zone=login burst=2 nodelay;
            proxy_pass http://django_backend;
            include /etc/nginx/proxy_params;
        }

        # Call server WebSocket e HTTP
        location /call/ {
            proxy_pass http://call_server;
            include /etc/nginx/proxy_params;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Janus WebRTC Gateway
        location /janus/ {
            proxy_pass http://janus_http/;
            include /etc/nginx/proxy_params;
        }

        # Janus WebSocket
        location /janus-ws/ {
            proxy_pass http://janus_websocket/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # Health check
        location /health/ {
            proxy_pass http://django_backend;
            access_log off;
        }

        # Main Django app
        location / {
            proxy_pass http://django_backend;
            include /etc/nginx/proxy_params;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS server (decommentare per SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # SSL ottimizzazioni
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     # Include tutte le location del server HTTP
    #     include /etc/nginx/conf.d/locations.conf;
    # }
}

# File proxy_params
# /etc/nginx/proxy_params content:
# proxy_set_header Host $http_host;
# proxy_set_header X-Real-IP $remote_addr;
# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# proxy_set_header X-Forwarded-Proto $scheme;
# proxy_connect_timeout 60s;
# proxy_send_timeout 60s;
# proxy_read_timeout 60s;
